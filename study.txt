from  Johannes 4GNV_Linux study
02. charactor device 만드는 법 
샘플 코드 추출함
static struct file_operations fops = {
	.owner = THIS_MODULE,
	.open = driver_open,
	.release = driver_close
};

#define MYMAJOR 64
/**
 * @brief This function is called, when the module is loaded into the kernel
 */
static int __init ModuleInit(void) {
	int retval;
	printk("Hello, Kernel!\n");
	/* register device nr. */
	retval = register_chrdev(MYMAJOR, "my_dev_nr", &fops);
	if(retval == 0) {
		printk("dev_nr - registered Device number Major: %d, Minor: %d\n", MYMAJOR, 0);
	}
	else if(retval > 0) {
		printk("dev_nr - registered Device number Major: %d, Minor: %d\n", retval>>20, retval&0xfffff);
	}
	else {
		printk("Could not register device number!\n");
		return -1;
	}
	return 0;
}

03 read/write 추가
copy_to_user
copy_from_user

기본 charactor device 추가 방법
alloc_chrdev_region(&my_device_nr, 0, 1, DRIVER_NAME)
class_create(THIS_MODULE, DRIVER_CLASS))
device_create(my_class, NULL, my_device_nr, NULL, DRIVER_NAME)
cdev_init(&my_device, &fops);
cdev_add(&my_device, my_device_nr, 1)

11 irq
#include <linux/interrupt.h>

        /* Setup the interrupt */
// gpio_irq_handler 는 함수
irq_number = gpio_to_irq(17);
request_irq(irq_number, (irq_handler_t) gpio_irq_handler, IRQF_TRIGGER_RISING, "my_gpio_irq", NULL);
           
12 param
/* Kernel Module's Paramerters*/
static unsigned int gpio_nr = 12;
static char *device_name = "testdevice";

module_param(gpio_nr, uint, S_IRUGO);
module_param(device_name, charp, S_IRUGO);


13 ioctl h 파일 이런것들이 ioctl 이동 가능하게 함
#define WR_VALUE _IOW('a', 'a', int32_t *)
#define RD_VALUE _IOR('a', 'b', int32_t *)
#define GREETER  _IOW('a', 'c', struct mystruct *)


